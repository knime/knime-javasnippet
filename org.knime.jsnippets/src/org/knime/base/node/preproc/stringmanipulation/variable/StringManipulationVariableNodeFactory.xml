<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./string_manipulation_variable.png" type="Manipulator" xmlns="http://knime.org/node/v3.6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v3.6 http://knime.org/node/v3.6.xsd">
	<name>String Manipulation (Variable)</name>
	<shortDescription>Manipulates or defines values of variables like search and replace,
		capitalize or remove leading and trailing white spaces.</shortDescription>
	<fullDescription>
		<intro>
			<p>
				This node is superseded by the "Variable Expression" node. We advise to use the "Variable Expression" node instead of this node.
			</p>
			<p>
				Manipulates or defines values of variables like search and replace,
                capitalize or remove leading and trailing white spaces.
			</p>
			<b>Examples:</b>
			<p>
				To remove leading and trailing blanks from a variable with name
				<i>c0</i>
				you would use the expression:
				<br />
				<i>strip($${Sc0}$$)</i>
			</p>
			<p>
				If you have your customer names in flow variable
				<i>names</i>
				with titles Mr and Mister and you
				want to normalize the data so that
				only Mr is used you could
				use the expression:
				<br />
				<i>replace($${Snames}$$, "Mister", "Mr")</i>
				<br />
				or you could combine it to
				<br />
				<i>replace(replace($${Snames}$$, "Mister", "Mr"), "Miss", "Ms")</i>
			</p>
			<p>
				Or if you want to have the number of characters of the strings
				in a
				variable with name
				<i>text</i>
				:
				<br />
				<i>length($${Stext}$$)</i>
			</p>
			<p>
				Note that strings which are part of the expression and are not
				from the
				input data (or the result of another wrapped function call)
				need
				to be enclosed in double quotes ('"'). Additionally, if the
				string
				contains a
				quote character, it must be escaped using a
				backslash character ('\"').
				Finally, other special characters such as
				single quotes and
				backslashes need
				to be escaped using a backslash.
				For instance, a single backslash in a
				string
				is written as two
				consecutive backslash characters; the first one acts
				as
				the escape
				character for the second.
			</p>
		</intro>
		<option name="Flow Variable List">
			The list contains the flow variables that are
			currently available at
			the node input. Double clicking any of the
			entries will insert the
			respective identifier at the current cursor
			position (replacing the
			selection, if any).
		</option>
		<option name="Function">
			Select a single function to display its
			description. A double click
			will insert the function in the expression
			editor.
			It will replace your current selection or
			simply insert at the
			current caret position.
			Select a category to narrow down the list of
			displayed functions.
		</option>
		<option name="Expression">
			The place for your business logic. You can hit
			<i>ctrl+space</i>
			to
			get an auto completion box.
		</option>
		<option name="Replace/Append">
			Specify here if you want the result to be put into
			a separate or
			existing flow variable. Note that the flow variable only
			can be replaced, if
			the type of it does not change (otherwise there
			will a
			new flow variable be appended, with same name, but different
			type).
		</option>
		<option name="Syntax check on close">
			If unchecked the dialog can be closed even when
			the expression has
			syntax errors.
		</option>
		<link href="https://www.knime.com/knime-introductory-course/chapter7/section1/creation-and-usage-of-flow-variables">
			KNIME E-Learning Course: Creation and usage of Flow Variables in a KNIME workflow
		</link>
	</fullDescription>
	<ports>
		<inPort name="Input variables (optional)" index="0">Input
			variables (optional).
		</inPort>
		<outPort name="Appended variables" index="0">Input variables with
			an additional calculated variable
			or one variable replaced.
		</outPort>
	</ports>
</knimeNode>
