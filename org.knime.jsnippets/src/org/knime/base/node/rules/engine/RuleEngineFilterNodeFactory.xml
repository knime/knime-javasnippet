<?xml version="1.0" encoding="utf-8"?>
<knimeNode type="Manipulator" icon="./rule_engine_filter.png" xmlns="http://knime.org/node/v4.1" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Rule-based Row Filter</name>
	<shortDescription>
		 Filters the input table based on user-defined business rules
	</shortDescription>

	<fullDescription>
		<intro>
			This node takes a list of user-defined rules and tries to match them
			to each row in the input table. If the first matching rule has a <tt>TRUE</tt> outcome, the row will be
            selected for inclusion. Otherwise (i.e. if the first matching rule yields <tt>FALSE</tt>) it will be
            excluded. If no rule matches the row will be excluded.
            Inclusion and exclusion may be inverted, see the options below.
			<p>
				Each rule is represented by a line.
				To add comments, start a line with
				<tt>//</tt>
				(comments can not be placed in the same line as a rule). Anything after <tt>//</tt> will not be interpreted as a rule.
				Rules consist of a condition part (antecedent), which must
				evaluate to
				<i>true</i>
				or
				<i>false</i>
				, and an outcome (consequent, after the =&gt; symbol) which is either
				<tt>TRUE</tt>
				or
				<tt>FALSE</tt>
				.
			</p>
			<p>
				If no rule matches, the outcome is treated as if it were
				<tt>FALSE</tt>
				.
			</p>
			<p>
				Columns are given by their name surrounded by $, numbers are given
				in the usual decimal representation. Note that strings must not
				contain (double-)quotes (for those cases use the following syntax: <tt>/Oscar Wilde's wisdom: "Experience is simply the name we give our mistakes."/</tt>). The flow variables are
				represented by
				<b>$${</b>
				TypeCharacterAndFlowVarName
				<b>}$$</b>
				.
				The TypeCharacter should be 'D' for double (real) values, 'I' for
				integer values and 'S' for strings.
			</p>
			<p>The logical expressions can be grouped with parentheses. The
				precedence rules for them are the following: <tt>NOT</tt> binds most, <tt>AND</tt>,
				<tt>XOR</tt> and finally <tt>OR</tt> the least.
				Comparison operators always take
				precedence over logical connectives.
				All operators (and their names)
				are case-sensitive.
			</p>
			<p>
				The
				<tt>ROWID</tt>
				represents the row key string, the
				<tt>ROWINDEX</tt>
				is a the index of the row (first row has
				<tt>0</tt>
				value), while
				<tt>ROWCOUNT</tt>
				stands for the number of rows in the table.
			</p>
			<p>Some example rules (each should be in one line):</p>
			<pre>
// This is a comment
$Col0$ > 0 => TRUE
</pre>
			When the values in Col0 are greater than 0, we select the row (if no
			previous rule matched with FALSE outcome).
			<pre>
$Col0$ = "Active" AND $Col1$ &lt;= 5 => TRUE
</pre>
			You can combine conditions.
			<pre>
$Col0$ LIKE "Market Street*" AND 
    ($Col1$ IN ("married", "divorced") 
        OR $Col2$ > 40) => FALSE
</pre>
			With parentheses you can combine multiple conditions.
			<pre>
$Col0$ MATCHES $${SFlowVar0}$$ OR $$ROWINDEX$$ &lt; $${IFlowVar1}$$ =>
    FALSE
</pre>
			The flow variables, table constants can also appear in conditions.
			<p>
				You can use either Ctrl+Space to insert predefined parts, or
				select them from the upper controls.
			</p>
			
			<p>
			The following comparisons result true
			(other values are neither less, nor greater or equal to missing and NaN values):
			<ul>
			<li><b>?</b> =,&lt;=,&gt;= <b>?</b></li>
			<li><b>NaN</b> =,&lt;=,&gt;= <b>NaN</b></li>
			</ul>
			</p>
		</intro>

		<option name="Column List">Available columns, which can be used as variables
			in a rule.
		</option>
		<option name="Flow Variable List">Available flow variables, which can be used as
			variables in a rule.
		</option>
		<option name="Category">The operator categories.</option>
		<option name="Function">A list of valid operators in the selected
			category.
		</option>
		<option name="Description">Short help about the operator.</option>
		<option name="Expression">The rule editor. You can complete the expressions
            with Ctrl+Space. Each row represents a rule. A red background of the
            line signals an error and the left side of the editor then shows an error icon.
		</option>
		<option
			name="Include TRUE matches">A row will be <b>in</b>cluded in the output if the first rule that
			matches has TRUE outcome. If the first matching rule has a FALSE outcome or no rule matches the row will
            be excluded.
		</option>
		<option
			name="Exclude TRUE matches">A row will be <b>ex</b>cluded in the output if the first rule that
            matches has TRUE outcome. If the first matching rule has a FALSE outcome or no rule matches the row will
            be included.
		</option>
	</fullDescription>

	<ports>
		<inPort index="0" name="Input table">Any data table from which to filter rows</inPort>
		<outPort index="0" name="Filtered">Data table with the included rows</outPort>
	</ports>
	<keywords>
		<keyword>Condition</keyword>
		<keyword>If then</keyword>
	</keywords>
</knimeNode>